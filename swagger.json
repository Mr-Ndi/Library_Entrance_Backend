{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Library API",
    "description": "API documentation for Library entrance"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    },
    {
      "url":"https://library-entrance-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Requesting session",
      "descsiption": "Requesting session related endpoints"
    },
    {
      "name":"history",
      "description":"History related endpoints"
    }
  ],
  "paths": {
    "/api/user/{regnumber}": {
      "get": {
        "tags": [
          "Requesting session"
        ],
        "summary": "Requesting session",
        "description": "Requests a session using the provided registration number.",
        "parameters": [
          {
            "name": "regnumber",
            "in": "path",
            "required": true,
            "description": "The registration number to request a session.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session requested successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "desccription": "No content to return; the request was successful but there is no such student.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status":{
                      "type":"boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/user":{
      "post":{
        "tags":[
          "Requesting session"
        ],
        "summary":"User registration",
        "describtion":"Registering new user and recording them for attendance",
        "requestBody":{
          "required":true,
          "content":{
            "application/json":{
              "schema":{
                "type":"object",
                "properties":{
                  "regNo": {
                    "type":"integer",
                    "example":222003242
                  },
                  "firstName":{
                    "type":"string"
                  },
                  "otherName":{
                    "type":"string"
                  },
                  "level":{
                    "type":"integer"
                  },
                  "department":{
                    "type":"string"
                  },
                  "gender":{
                    "type":"string",
                    "enum":[
                      "male",
                      "female"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses":{
          "200":{
            "desccription":"Registration successful",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties":{
                    "success":{
                      "type":"boolean"
                    },
                    "ticketId":{
                      "type":"string"
                    },
                    "regNo": {
                      "type":"integer",
                      "example":222003242
                    },
                    "firstName":{
                      "type":"string"
                    },
                    "otherName":{
                      "type":"string"
                    },
                    "level":{
                      "type":"integer"
                    },
                    "department":{
                      "type":"string"
                    },
                    "recordedAt":{
                      "type":"string"
                    },
                    "gender":{
                      "type":"string",
                      "enum":[
                        "male",
                        "female"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500":{
            "description":"Something went wrong in server",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties":{
                    "success":{
                      "type":"boolean",
                      "example":false
                    },
                    "message":{
                      "type":"string",
                      "example":"Server error"
                    }
                  }                  
                }
              }
            }
          }
        }
      }
    },
    "/api/history/{ticketId}":{
      "get":{
        "tags":["history"],
        "summary":"Ticket validation endpoint",
        "description":"This endpoint is for validating if the ticket is today's one",
        "parameters":[
          {
            "name":"ticketId",
            "required":true,
            "in":"path",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "500":{
            "summary":"Enternal server error",
            "description":"Unexpected error occured on server while handling request",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties":{
                    "success":{
                      "type":"boolean"
                    },
                    "message":{
                      "type":"string",
                      "example":"Server error"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "summary":"Invalid ticket id",
            "description":"Provided reference id not found",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties":{
                    "success":{
                      "type":"boolean"
                    },
                    "message":{
                      "type":"string",
                      "example":"Invalid ticket id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}