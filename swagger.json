{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Library API",
    "description": "API documentation for Library entrance"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    },
    {
      "url":"https://library-entrance-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Requesting session",
      "description": "Requesting session related endpoints"
    }
  ],
  "paths": {
    "/api/user/{regnumber}": {
  "get": {
    "tags": [
      "Requesting session"
    ],
    "summary": "Requesting session",
    "description": "Requests a session using the provided registration number.",
    "parameters": [
      {
        "name": "regnumber",
        "in": "path",
        "required": true,
        "description": "The registration number to request a session.",
        "schema": {
          "type": "string"
        }
      }
    ],
        "responses": {
          "200": {
            "description": "Session requested successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "desccription": "No content to return; the request was successful but there is no such student."
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/user":{
      "post":{
        "tags":[
          "Requesting session"
        ],
        "summary":"User registration",
        "describtion":"Registering new user and recording them for attendance",
        "requestBody":{
          "required":true,
          "content":{
            "application/json":{
              "schema":{
                "type":"object",
                "properties":{
                  "regNo": {
                    "type":"integer",
                    "example":222003242
                  },
                  "firstName":{
                    "type":"string"
                  },
                  "otherName":{
                    "type":"string"
                  },
                  "level":{
                    "type":"integer"
                  },
                  "department":{
                    "type":"string"
                  },
                  "gender":{
                    "type":"string",
                    "enum":[
                      "male",
                      "female"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses":{
          "200":{
            "desccription":"Registration successful",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties":{
                    "success":{
                      "type":"boolean"
                    },
                    "refId":{
                      "type":"string"
                    },
                    "regNo": {
                      "type":"integer",
                      "example":222003242
                    },
                    "firstName":{
                      "type":"string"
                    },
                    "otherName":{
                      "type":"string"
                    },
                    "level":{
                      "type":"integer"
                    },
                    "department":{
                      "type":"string"
                    },
                    "gender":{
                      "type":"string",
                      "enum":[
                        "male",
                        "female"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500":{
            "description":"Something went wrong in server",
            "content":{
              "application/json":{
                "schema":{
                  "type":"object",
                  "properties":{
                    "success":{
                      "type":"boolean",
                      "example":false
                    },
                    "message":{
                      "type":"string",
                      "example":"Server error"
                    }
                  }                  
                }
              }
            }
          }
        }
      }
    }
  }
}